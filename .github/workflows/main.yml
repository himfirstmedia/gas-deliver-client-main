name: Android Production Build (Expo)
on:
  push:
    branches:
      - main
      - master
  pull_request:
    branches:
      - main
      - master
  workflow_dispatch:
    inputs:
      branch:
        description: 'Branch to build'
        required: true
        default: 'master'
        type: string

env:
  NODE_VERSION: '20.x'
  JAVA_VERSION: '17'
  DISTRIBUTION: 'temurin'

jobs:
  build_expo_production:
    name: Build Expo Production APK
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.branch || github.ref_name }}

      - name: Setup Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'yarn'

      - name: Setup Java JDK ${{ env.JAVA_VERSION }}
        uses: actions/setup-java@v4
        with:
          distribution: ${{ env.DISTRIBUTION }}
          java-version: ${{ env.JAVA_VERSION }}

      - name: Setup Android SDK
        uses: android-actions/setup-android@v3
        with:
          api-level: 34
          build-tools: 34.0.0
          ndk-version: 25.1.8937393

      - name: Cache Node Modules
        uses: actions/cache@v4
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install Dependencies
        run: yarn install --frozen-lockfile

      - name: Install Required Native Dependencies
        run: |
          yarn add react-native-svg
          yarn add react-native-maps
          yarn add expo-location

      - name: Install Expo CLI
        run: npm install -g @expo/cli

      - name: Clean Previous Builds
        run: |
          rm -rf android
          rm -rf ios

      - name: Prebuild Android for Production
        run: |
          npx expo prebuild --platform android --clean
        env:
          EXPO_NO_CACHE: 1

      - name: Cache Gradle Dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('android/gradle/wrapper/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Grant Execute Permissions for gradlew
        run: chmod +x android/gradlew

      - name: Create Release Keystore
        run: |
          mkdir -p android/app
          keytool -genkeypair -v -keystore android/app/release.keystore \
            -alias release-key \
            -keyalg RSA \
            -keysize 2048 \
            -validity 10000 \
            -storepass android \
            -keypass android \
            -dname "CN=MyApp, OU=MyOrg, O=MyCompany, L=City, S=State, C=US"

      - name: Verify Android Manifest Permissions
        run: |
          echo "Checking Android Manifest permissions..."
          cat android/app/src/main/AndroidManifest.xml | grep -i "permission\|maps" || true

      - name: Build Android Release APK (Signed)
        run: |
          cd android
          echo "MYAPP_RELEASE_STORE_FILE=release.keystore" >> gradle.properties
          echo "MYAPP_RELEASE_KEY_ALIAS=release-key" >> gradle.properties
          echo "MYAPP_RELEASE_STORE_PASSWORD=android" >> gradle.properties
          echo "MYAPP_RELEASE_KEY_PASSWORD=android" >> gradle.properties
          ./gradlew assembleRelease --console=plain --no-daemon --stacktrace

      - name: Upload Signed Release APK
        uses: actions/upload-artifact@v4
        with:
          name: expo-production-signed-apk
          path: android/app/build/outputs/apk/release/app-release.apk
          retention-days: 30

      - name: Upload Build Logs (on failure)
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: build-logs
          path: |
            android/app/build/outputs/logs/
            android/build/outputs/logs/
          retention-days: 7